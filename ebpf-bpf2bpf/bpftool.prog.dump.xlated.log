int k_tcp_connect(struct pt_regs * ctx):
; sk = (typeof(sk))PT_REGS_PARM1(ctx);
   0: (79) r2 = *(u64 *)(r1 +112)
; handle_new_connection(ctx, sk);
   1: (85) call pc+2#bpf_prog_93a5a8fde5afab51_handle_new_connection
; return 0;
   2: (b7) r0 = 0
   3: (95) exit
void handle_new_connection(void * ctx, struct sock * sk):
; handle_new_connection(void *ctx, struct sock *sk)
   4: (bf) r8 = r2
   5: (bf) r6 = r1
   6: (b7) r1 = 0
; event_t ev = {};
   7: (63) *(u32 *)(r10 -8) = r1
   8: (7b) *(u64 *)(r10 -16) = r1
   9: (b7) r1 = 4
  10: (bf) r3 = r8
  11: (0f) r3 += r1
  12: (bf) r7 = r10
; 
  13: (07) r7 += -16
; ev.saddr = BPF_CORE_READ(sk, __sk_common.skc_rcv_saddr);
  14: (bf) r1 = r7
  15: (b7) r2 = 4
  16: (85) call bpf_probe_read_kernel#-100688
  17: (b7) r1 = 0
  18: (bf) r3 = r8
  19: (0f) r3 += r1
  20: (bf) r1 = r10
; 
  21: (07) r1 += -20
; ev.daddr = BPF_CORE_READ(sk, __sk_common.skc_daddr);
  22: (b7) r2 = 4
  23: (85) call bpf_probe_read_kernel#-100688
; ev.daddr = BPF_CORE_READ(sk, __sk_common.skc_daddr);
  24: (61) r1 = *(u32 *)(r10 -20)
; ev.daddr = BPF_CORE_READ(sk, __sk_common.skc_daddr);
  25: (63) *(u32 *)(r10 -12) = r1
  26: (b7) r1 = 14
  27: (bf) r3 = r8
  28: (0f) r3 += r1
  29: (bf) r1 = r10
; 
  30: (07) r1 += -20
; ev.sport = BPF_CORE_READ(sk, __sk_common.skc_num);
  31: (b7) r2 = 2
  32: (85) call bpf_probe_read_kernel#-100688
; ev.sport = BPF_CORE_READ(sk, __sk_common.skc_num);
  33: (69) r1 = *(u16 *)(r10 -20)
; ev.sport = BPF_CORE_READ(sk, __sk_common.skc_num);
  34: (6b) *(u16 *)(r10 -8) = r1
  35: (b7) r1 = 12
  36: (0f) r8 += r1
  37: (bf) r1 = r10
; 
  38: (07) r1 += -20
; ev.dport = bpf_ntohs(BPF_CORE_READ(sk, __sk_common.skc_dport));
  39: (b7) r2 = 2
  40: (bf) r3 = r8
  41: (85) call bpf_probe_read_kernel#-100688
; ev.dport = bpf_ntohs(BPF_CORE_READ(sk, __sk_common.skc_dport));
  42: (69) r1 = *(u16 *)(r10 -20)
; ev.dport = bpf_ntohs(BPF_CORE_READ(sk, __sk_common.skc_dport));
  43: (dc) r1 = be16 r1
; ev.dport = bpf_ntohs(BPF_CORE_READ(sk, __sk_common.skc_dport));
  44: (6b) *(u16 *)(r10 -6) = r1
; bpf_perf_event_output(ctx, &events, BPF_F_CURRENT_CPU, &ev, sizeof(ev));
  45: (bf) r1 = r6
  46: (18) r2 = map[id:13]
  48: (18) r3 = 0xffffffff
  50: (bf) r4 = r7
  51: (b7) r5 = 12
  52: (85) call bpf_perf_event_output#-99472
; }
  53: (95) exit
